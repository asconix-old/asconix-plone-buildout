[buildout]
extends =
    base.cfg

parts +=
    zeo-server

    instance-01
    instance-02
    instance-03
    instance-04

    nginx-directories
    
    nginx-build
    varnish-build
    haproxy-build

    nginx
    varnish.vcl
    varnish
    haproxy
    supervisor

debug-mode = on
deprecation-warnings = off
verbose-security = off

# where to download the sources from
[downloads]
nginx = http://nginx.org/download/nginx-1.0.4.tar.gz
varnish = http://repo.varnish-cache.org/source/varnish-2.1.5.tar.gz
haproxy = http://haproxy.1wt.eu/download/1.4/src/haproxy-1.4.15.tar.gz

# IP adresses the individual components listen on
[hosts]
nginx = 188.40.43.17
varnish = 188.40.43.17
haproxy = 188.40.43.17
instance-01 = 188.40.43.17
instance-02 = 188.40.43.17
instance-03 = 188.40.43.17
instance-04 = 188.40.43.17
zeo-server = 188.40.43.17
supervisor = 188.40.43.17

# ports the individual components listen on
[ports]
nginx_http = 80
nginx_https = 443
varnish = 8101
varnish_telnet = 8102
haproxy = 8201
instance-01 = 8801
instance-02 = 8802
instance-03 = 8803
instance-04 = 8804
zeo-server = 8901
supervisor = 9001

# UID/GID the individual components run
[users]
nginx = plone
varnish = plone
haproxy = plone
instance-01 = plone
instance-02 = plone
instance-03 = plone
instance-04 = plone
zeo-server = plone
supervisor = plone

[groups]
haproxy = plone

###
# ZEO server
#

[zeo-server]
recipe = plone.recipe.zeoserver
zeo-address = ${hosts:zeo-server}:${ports:zeo-server}
effective-user = ${users:zeo-server}
pid-file = ${buildout:directory}/parts/zeo-server/var/zeo-server.pid
socket-name = ${buildout:directory}/parts/zeo-server/var/zeo-server.zdsock
file-storage = ${buildout:directory}/var/filestorage/Data.fs
blob-storage = ${buildout:directory}/var/blobstorage
zeo-log = ${buildout:directory}/var/log/zeo-server.log
invalidation-queue-size = 100
autostart= true
autorestart = true
startsecs = 10

###
# ZEO clients
#

[instance-01]
recipe = plone.recipe.zope2instance
zeo-client = true
zeo-address = ${zeo-server:zeo-address}
user = admin:admin
effective-user = ${users:instance-01}
zodb-cache-size = 5000
zeo-client-cache-size = 300MB
zserver-threads = 2
http-address = ${hosts:instance-01}:${ports:instance-01}
file-storage = ${buildout:directory}/var/filestorage/Data.fs
blob-storage = ${zeo-server:blob-storage}
shared-blob = on
debug-mode = ${buildout:debug-mode}
verbose-security = ${buildout:verbose-security}
deprecation-warnings = ${buildout:deprecation-warnings}
eggs =
    Zope2
    Plone
    ${buildout:eggs}
zcml =
    ${buildout:zcml}
products =
    ${buildout:directory}/products
    ${productdistros:location}
environment-vars =
    zope_i18n_compile_mo_files true
event-log = ${buildout:directory}/var/log/instance-01.event.log
event-log-level = ALL
z2-log    = ${buildout:directory}/var/log/instance-01.Z2.log
z2-log-level = ALL
pid-file  = ${buildout:directory}/parts/instance-01/var/instance-01.pid
lock-file = ${buildout:directory}/parts/instance-01/var/instance-01.lock

[instance-02]
recipe = plone.recipe.zope2instance
zeo-client = true
zeo-address = ${zeo-server:zeo-address}
user = ${instance-01:user}
effective-user = ${users:instance-02}
zodb-cache-size = 5000
zeo-client-cache-size = 300MB
http-address = ${hosts:instance-02}:${ports:instance-02}
file-storage = ${buildout:directory}/var/filestorage/Data.fs
blob-storage = ${instance-01:blob-storage}
shared-blob = on
debug-mode = ${buildout:debug-mode}
verbose-security = ${buildout:verbose-security}
deprecation-warnings = ${buildout:deprecation-warnings}
eggs = ${instance-01:eggs}
zcml = ${instance-01:zcml}
products = ${instance-01:products}
environment-vars = ${instance-01:environment-vars}
event-log = ${buildout:directory}/var/log/instance-02.event.log
event-log-level = ${instance-01:event-log-level}
z2-log    = ${buildout:directory}/var/log/instance-02.Z2.log
z2-log-level = ${instance-01:z2-log-level}
pid-file  = ${buildout:directory}/parts/instance-02/var/instance-02.pid
lock-file = ${buildout:directory}/parts/instance-02/var/instance-02.lock
autostart= true
autorestart = true

[instance-03]
recipe = plone.recipe.zope2instance
zeo-client = true
zeo-address = ${zeo-server:zeo-address}
user = ${instance-01:user}
effective-user = ${users:instance-03}
zodb-cache-size = 5000
zeo-client-cache-size = 300MB
http-address = ${hosts:instance-03}:${ports:instance-03}
blob-storage = ${instance-01:blob-storage}
shared-blob = on
debug-mode = ${buildout:debug-mode}
verbose-security = ${buildout:verbose-security}
deprecation-warnings = ${buildout:deprecation-warnings}
eggs = ${instance-01:eggs}
zcml = ${instance-01:zcml}
products = ${instance-01:products}
environment-vars = ${instance-01:environment-vars}
event-log = ${buildout:directory}/var/log/instance-03.event.log
event-log-level = ${instance-01:event-log-level}
z2-log    = ${buildout:directory}/var/log/instance-03.Z2.log
z2-log-level = ${instance-01:z2-log-level}
pid-file  = ${buildout:directory}/parts/instance-03/var/instance-03.pid
lock-file = ${buildout:directory}/parts/instance-03/var/instance-03.lock
autostart= true
autorestart = true

[instance-04]
recipe = plone.recipe.zope2instance
zeo-client = true
zeo-address = ${zeo-server:zeo-address}
user = ${instance-01:user}
effective-user = ${users:instance-04}
zodb-cache-size = 5000
zeo-client-cache-size = 300MB
http-address = ${hosts:instance-04}:${ports:instance-04}
blob-storage = ${instance-01:blob-storage}
shared-blob = on
debug-mode = ${buildout:debug-mode}
verbose-security = ${buildout:verbose-security}
deprecation-warnings = ${buildout:deprecation-warnings}
eggs = ${instance-01:eggs}
zcml = ${instance-01:zcml}
products = ${instance-01:products}
environment-vars = ${instance-01:environment-vars}
event-log = ${buildout:directory}/var/log/instance-04.event.log
event-log-level = ${instance-01:event-log-level}
z2-log    = ${buildout:directory}/var/log/instance-04.Z2.log
z2-log-level = ${instance-01:z2-log-level}
pid-file  = ${buildout:directory}/parts/instance-04/var/instance-04.pid
lock-file = ${buildout:directory}/parts/instance-04/var/instance-04.lock
autostart= true
autorestart = true

###
# Nginx frontend HTTP server
#

# create directories used by Nginx
[nginx-directories]
recipe = plone.recipe.command
command =
    [ -d ${buildout:directory}/var/tmp/nginx/proxy ] || mkdir -p ${buildout:directory}/var/tmp/nginx/proxy;
    [ -d ${buildout:directory}/var/tmp/nginx/client-body ] || mkdir -p ${buildout:directory}/var/tmp/nginx/client-body;
    [ -d ${buildout:directory}/var/tmp/nginx/fastcgi ] || mkdir -p ${buildout:directory}/var/tmp/nginx/fastcgi;
    chown -R ${users:zeo-server}.${users:zeo-server} ${buildout:directory}/var/tmp/nginx;

# compile Nginx from sources
[nginx-build]
recipe = zc.recipe.cmmi
url = ${downloads:nginx}
extra_options =
    --conf-path=${buildout:directory}/parts/nginx/nginx.conf
    --sbin-path=${buildout:directory}/parts/nginx-build/sbin/nginx
    --error-log-path=${buildout:directory}/var/log/nginx_error.log
    --http-log-path=${buildout:directory}/var/log/nginx_access.log
    --pid-path=${buildout:directory}/parts/nginx/nginx.pid
    --lock-path=${buildout:directory}/parts/nginx/nginx.lock
    --with-http_ssl_module
    --with-http_stub_status_module
    --with-http_realip_module
    --with-http_gzip_static_module
    --http-client-body-temp-path=${buildout:directory}/var/tmp/nginx/client-body
    --http-proxy-temp-path=${buildout:directory}/var/tmp/nginx/proxy
    --http-fastcgi-temp-path=${buildout:directory}/var/tmp/nginx/fastcgi
    --with-cc-opt="-I /usr/local/include -D FD_SETSIZE=2048"

# configure Nginx
[nginx]
recipe = gocept.nginx
nginx = nginx-build
autostart= true
autorestart = true
run-directory = ${buildout:directory}/var/nginx
etc-directory = ${buildout:directory}/var/nginx
log-directory = ${buildout:directory}/var/log
rc-directory = ${buildout:directory}/bin
ssl-directory = ${buildout:directory}/custom/ssl
configuration =
    user ${users:nginx};
    worker_processes 1;

    daemon off;
    
    error_log ${nginx:log-directory}/nginx_error.log info;
	
	events {
        worker_connections 1024;
    }
    
	http {
		include ${buildout:directory}/parts/nginx/mime.types;
        default_type application/octet-stream;
      
        # general settings
		sendfile on;
		#ignore_invalid_headers   on;
        #keepalive_requests      100;
        #recursive_error_pages    on;
        #server_name_in_redirect off;
        #server_tokens           off;
        
		# timeouts
        keepalive_timeout     10m;
        client_body_timeout   10m;
        client_header_timeout 10m;
        send_timeout          10m;
        expires               24h;

        # size limits
		client_max_body_size          10M;
        client_body_buffer_size       128k;
        client_header_buffer_size     128k; 
        large_client_header_buffers   4 2k; 
        #connection_pool_size          256; 
        #request_pool_size             4k;

        # TCP options
        tcp_nodelay        on;
        #tcp_nopush         on;
        
        ## Proxy options
        #proxy_buffering             on;
        #proxy_buffer_size           4k;
        #proxy_buffers               16 32k;
        #proxy_busy_buffers_size     64k;
        #proxy_temp_file_write_size  64k;
        #proxy_cache_min_uses        3;
        #proxy_cache_valid           any 10m;
        #proxy_ignore_client_abort   on;
        #proxy_intercept_errors      on;
        #proxy_next_upstream         error timeout invalid_header;
        #proxy_redirect              off;
        proxy_connect_timeout       60;
        proxy_send_timeout          60;
        proxy_read_timeout          60;

        # miscellaneous settings
        output_buffers                1 32k; 
        postpone_output               1460; 
        fastcgi_ignore_client_abort   on;       

        # SSL certificate and private key file
        ssl_certificate ${nginx:ssl-directory}/asconix.com.crt;
        ssl_certificate_key ${nginx:ssl-directory}/asconix.com.key;
        
		# compression
        gzip              on;
        gzip_buffers      16 8k;
        gzip_comp_level   6;
        gzip_http_version 1.0;
        gzip_min_length   0;
        gzip_types        text/plain text/html text/xml text/css text/javascript application/x-javascript application/json application/xml application/xml+rss application/x-perl application/x-httpd-cgi image/x-icon;
        gzip_vary         on;
        gzip_disable      "MSIE [1-6].(?!.*SV1)";

        # log format
        log_format main 
            '$remote_addr - - [$time_local] ' 
            '"$request" $status $body_bytes_sent ' 
            '"$http_referer" "$http_user_agent" ' 
            '"$gzip_ratio"'; 
        log_format full 
            '$remote_addr - - [$time_local] ' 
            '"$request" $status $body_bytes_sent ' 
            '"$http_referer" "$http_user_agent" "$http_host" '
            '$request_time "$http_x_forwarded_for" "$http_via" '
            '"$gzip_ratio"'; 
        log_format timing 
            '$remote_addr - $remote_user [$time_local] '
            '$request upstream_response_time $upstream_response_time '
            'msec $msec request_time $request_time';
        
        # Varnish as cache backend
        upstream varnish {
            server ${hosts:varnish}:${ports:varnish};
        }

        # asconix.com (rewrite to www.asconix.com)
        server {
            listen ${hosts:nginx}:${ports:nginx_http};
            server_name asconix.com;
            error_log ${nginx:log-directory}/www.asconix.com_error.log info;
            access_log ${nginx:log-directory}/www.asconix.com_access.log;
            rewrite ^/(.*) http://www.asconix.com/$1 permanent;
        }
        server {
            listen ${hosts:nginx}:${ports:nginx_https};
            server_name asconix.com;
            error_log ${nginx:log-directory}/www.asconix.com_error.log info;
            access_log ${nginx:log-directory}/www.asconix.com_access.log;
            rewrite ^/(.*) https://www.asconix.com/$1 permanent;
        }

        # www.asconix.com (HTTP)
        server {
            listen ${hosts:nginx}:${ports:nginx_http};
            server_name www.asconix.com;
            error_log ${nginx:log-directory}/www.asconix.com_error.log info;
            access_log ${nginx:log-directory}/www.asconix.com_access.log;
            rewrite ^(.*)(/login_|/require_login|/failsafe_login_form)(.*) https://$server_name$1$2$3 redirect;
            if ($http_cookie ~* "__ac=([^;]+)(?:;|$)" ) {
              rewrite ^(.*) https://$host/$1 redirect;
            }
			set_real_ip_from  188.40.43.17;
			real_ip_header    X-Forwarded-For;
            
			include ${buildout:directory}/custom/etc/nginx_url_mappings.conf;

            location / {
                proxy_pass        http://varnish/VirtualHostBase/http/www.asconix.com:${ports:nginx_http}/asconix/VirtualHostRoot/;
            #    proxy_set_header  Host             $host;
            #    proxy_set_header  X-Real-IP        $remote_addr;
            #    proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            }
        }

        # www.asconix.com (HTTPS)
        server {
            listen ${hosts:nginx}:${ports:nginx_https} default ssl;
            server_name www.asconix.com;
            error_log ${nginx:log-directory}/www.asconix.com_error.log info;
            access_log ${nginx:log-directory}/www.asconix.com_access.log;
            if ($http_cookie ~* "__ac=([^;]+)(?:;|$)" ) {
                # prevent infinite recursions between http and https
                break;
            }
            rewrite ^(.*)(/logged_out)(.*) http://$server_name$1$2$3 redirect;
			set_real_ip_from  188.40.43.17;
			real_ip_header    X-Forwarded-For;
            location / {
                proxy_pass                  http://varnish/VirtualHostBase/https/www.asconix.com:${ports:nginx_https}/asconix/VirtualHostRoot/;
            #    proxy_set_header     Host            $host;
            #    proxy_set_header     X-Real-IP       $remote_addr;
            #    proxy_set_header     X-Forwarded-For $proxy_add_x_forwarded_for;
            }
        }

        # zmi.asconix.com (HTTP)
        server {
            listen ${hosts:nginx}:${ports:nginx_http};
            server_name zmi.asconix.com;
            error_log ${nginx:log-directory}/zmi.asconix.com_error.log info;
            access_log ${nginx:log-directory}/zmi.asconix.com_access.log;
            gzip                     off;
            proxy_buffering          off;
            rewrite ^(.*) https://$server_name$1$2$3 redirect;
        }
	
        # zmi.asconix.com (HTTPS)
        ##server {
        ##    listen ${hosts:nginx}:${ports:nginx_https} ssl;
        ##    server_name zmi.asconix.com;
        ##    error_log ${nginx:log-directory}/zmi.asconix.com_error.log info;
        ##    access_log ${nginx:log-directory}/zmi.asconix.com_access.log;
        ##    location / {
        ##        proxy_pass http://varnish/VirtualHostBase/https/zmi.asconix.com:443/VirtualHostRoot/;
        ##        proxy_set_header X-Real-IP $remote_addr;
        ##    }
        ##}
    }

###
# Varnish cache
#

# compile Varnish from sources
[varnish-build]
recipe = zc.recipe.cmmi
url = ${downloads:varnish}

# varnish.vcl template
[varnish.vcl]
recipe = collective.recipe.template 
input = ${buildout:directory}/custom/etc/varnish.vcl.in 
output = ${buildout:directory}/var/varnish.vcl

# configure Varnish
[varnish]
recipe = plone.recipe.varnish
daemon = ${buildout:directory}/parts/varnish-build/sbin/varnishd
bind = ${hosts:varnish}:${ports:varnish}
backends = ${hosts:haproxy}:${ports:haproxy}
cache-size = 1G
user = ${users:varnish}
telnet = ${hosts:varnish}:${ports:varnish_telnet}
mode = foreground
autostart= true
autorestart = true

###
# HAProxy reverse proxy & load balancer
#

# compile HAProxy from sources
[haproxy-build]
recipe = plone.recipe.haproxy
url = ${downloads:haproxy}
target = linux26
cpu = amd64
pcre = 1

# configure HAProxy
[haproxy]
recipe = collective.recipe.template
input = ${buildout:directory}/custom/etc/haproxy.conf.in
output = ${buildout:directory}/var/haproxy.conf
maxconn = 32000
ulimit = 64000
user = ${users:haproxy}
group = ${groups:haproxy}
bind = ${hosts:haproxy}:${ports:haproxy}

###
# Supervisor
#

[supervisor]
recipe = collective.recipe.supervisor
port = ${ports:supervisor}
user = admin
password = admin
serverurl = http://${hosts:supervisor}:${ports:supervisor}
plugins = superlance
supervisord-conf = ${buildout:directory}/parts/supervisor/supervisord.conf
programs =
#    10 zeo-server     ${zeo-server:location}/bin/runzeo                                                     true ${users:zeo-server}
#    20 instance-01    ${buildout:bin-directory}/instance-01 [console]                                       true ${users:instance-01}
#    20 instance-02    ${buildout:bin-directory}/instance-02 [console]                                       true ${users:instance-02}
#    20 instance-03    ${buildout:bin-directory}/instance-03 [console]                                       true ${users:instance-03}
#    20 instance-04    ${buildout:bin-directory}/instance-04 [console]                                       true ${users:instance-04}
    10 zeo-server     ${zeo-server:location}/bin/runzeo ${zeo-server:location}                              true
    20 instance-01    ${buildout:bin-directory}/instance-01 [console] ${zeo-server:location}                true
    20 instance-02    ${buildout:bin-directory}/instance-02 [console] ${zeo-server:location}                true
    20 instance-03    ${buildout:bin-directory}/instance-03 [console] ${zeo-server:location}                true
    20 instance-04    ${buildout:bin-directory}/instance-04 [console] ${zeo-server:location}                true
    30 haproxy        ${buildout:bin-directory}/haproxy [ -f ${buildout:directory}/var/haproxy.conf -db ]   true ${users:haproxy}}    
    30 varnish        ${buildout:bin-directory}/varnish [ -f ${buildout:directory}/var/varnish.vcl ]        true ${users:varnish}
    50 nginx          ${nginx-build:location}/sbin/nginx [-c ${nginx:run-directory}/nginx.conf]             true root
eventlisteners =
    Memmon TICK_60 ${buildout:bin-directory}/memmon [-p instance-01=400MB]
    Memmon TICK_60 ${buildout:bin-directory}/memmon [-p instance-02=400MB]
    Memmon TICK_60 ${buildout:bin-directory}/memmon [-p instance-03=400MB]
    Memmon TICK_60 ${buildout:bin-directory}/memmon [-p instance-04=400MB]

